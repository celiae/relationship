import Head from "next/head";
import React, { useEffect, useState } from "react";
import { useRouter } from "next/router";
import Network from "types/network";
import { INITIAL_NETWORK } from "app/constant";
import FamilyForm from "components/family-form";
import Family from "types/family";

interface Props {
  family: Family;
}

export default function FamilyMemberUpdate({ family }: Props) {
  return (
    <>
      <Head>
        <title>Network | Relationship</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <FamilyForm family={family} method="PUT" />
    </>
  );
}

export async function getStaticPaths() {
  if (process.env.SKIP_BUILD_STATIC_GENERATION) {
    return {
      paths: [],
      fallback: "blocking",
    };
  }

  const res = await fetch("http://localhost:8080/family");
  const families: Network[] = await res.json();

  const paths = families.map((family) => ({
    params: { id: family.id.toString() },
  }));

  return { paths, fallback: false };
}

type Params = {
  params: {
    id: string;
  };
};

export async function getStaticProps({ params }: Params) {
  const res = await fetch(`http://localhost:8080/family/${params.id}`);
  const family: Family = await res.json();

  return {
    props: { family },
  };
}
